---
title: "欠損値"
---

## 欠損値とは？
欠損値（missing value）とは、何らかの理由によって変数の値が観察されなかった状態のことを指す。

例えば、「年齢」という変数が「30歳」という値を取る調査対象者を想定してみよう。この対象者が年齢を答えたくない、あるいは年齢に関する質問項目を見落としていた、などの理由から年齢を回答しなかった場合、本来得られるはずであった「30歳」という値は観測されずに「欠測」してしまう。

## `R`における欠損値
`R`では通常、欠損値は`NA`で表示される。このほかにも非数値`NaN`、無限大`Inf`という属性があるが現時点ではひとまず覚えなくて良い。


例えば、以下のように入力するとベクトルの2番目の要素が欠損値になる。

```{r}
Hako <- c(1, NA, 2)
Hako
```

## 欠損値の判定
ベクトルの要素が欠損値か否かを判定するのための関数が`is.na()`である。

```{r}
is.na(Hako)
```

`FALSE`は欠損値でない要素、`TRUE`は欠損値の要素をそれぞれ表す。

なお、`TRUE`および`FALSE`は論理値と呼ばれるデータの型である。

ベクトルの中にひとつでも欠測値が含まれているかを判定するには`anyNA()`を使う。

```{r}
anyNA(Hako)
```

## 欠損値の置換
欠損値を任意の値に置き換えたい場合、いくつかの方法がある

### `ifelse`を使う場合

```{r}
ifelse(is.na(Hako), 0, Hako)
Hako   # 上記の場合は元のHakoというオブジェクトの中身は変わっていないので注意

# 置換後のベクトルを保存したい場合はオブジェクトとして保存する
Hako_NAimp <- ifelse(is.na(Hako), 0, Hako)
Hako_NAimp
Hako # 置換前のオブジェクトの中身はそのまま
```


### `is.na()`でベクトル内の欠損値の位置を指定して置換する場合

```{r}
Hako2 <- Hako
Hako2[is.na(Hako2)] <- 0
Hako2
```


## 欠損値の除去
ベクトルに欠損値が含まれる場合、そのままでは関数が適用できないことがある。

```{r}
sum(Hako)  # 1 + NA + 2 = NA
```

しかし一部の関数には、欠損値を除去して関数を適用するための`na.rm`オプションというものが実装されている。

```{r}
sum(Hako, na.rm = TRUE)  # 1 + 2 = 3
```

または、ベクトルから欠損値を除去してからそれを関数に引き渡してもよい。

```{r}
is.na(Hako)   # 欠損値の位置を表す論理ベクトル 
!is.na(Hako)  # 上記を反転させれば「欠損値でない要素の位置を表す論理ベクトル」になる
Hako_noNA <- Hako[!is.na(Hako)] # "!is.na(Hako)"がTRUEの要素のみ残る
Hako_noNA
sum(Hako_noNA)
```


## データフレームにおける欠損値の処理
データフレームにおける欠損値を処理するための関数として`na.omit()`がある。

```{r}
# 曜日ごとのビール消費量のデータフレームを作成
DF <- data.frame(Youbi       = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"),
                 BeerConsume = c(350, 350, 350, 350, 1000, NA, NA))
DF
```

土曜日と日曜日のビール消費量が欠損値になっている。欠損値を含む行を削除したい場合は`na.omit()`を使う。

```{r}
na.omit(DF)
```

`na.omit()`はいわゆるリストワイズ（listwise）の処理を行う関数である。すなわち、データフレームに含まれる変数のうち**少なくともひとつの変数に欠損値を含むケース（行）は全て除去される。**

```{r}
DF2 <- data.frame(Youbi      = c(NA,  NA, "Wed", "Thu", "Fri", "Sat", "Sun"),
                 BeerConsume = c(350, 350, 350, 350, 1000, NA, NA))
DF2
```

`DF2`の場合、ビール消費量だけではなくて曜日にも欠測値が存在する。このデータフレームに`na.omit()`を適用すると、曜日（`Youbi`）とビール消費量（`BeerConsume`）の両方とも欠測値でないケース（行）のみが残る。

```{r}
na.omit(DF2)
```



