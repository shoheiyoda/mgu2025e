---
title: "変数の作成"
---

## 変数の作成
データ分析の過程においては、新しい変数を追加する必要があることが多い。
例えば、「身長」と「体重」という2つの変数が与えられていて、それらをもとに「BMI」という新しい変数をデータフレームに追加することを考えてみる。
以下では、`R`にデフォルトでインストールされているサンプルデータ`women`を用いる。このサンプルデータの説明には

> Average Heights and Weights for American Women

とあり、アメリカ女性の平均身長と平均体重に関するデータであることがわかる。

```{r}
DF_sample <- women
DF_sample
```
データの個数は15、身長（`height`）、体重（`weight`）共に欠測値はないことがわかる。身長はインチ、体重はポンドでそれぞれ測定されている。

それでは、以下のステップで新規変数BMIを作成してみよう。  

1. 身長をm、体重をkgに変換する  
2. BMI(体重kg / [(身長m)^2])を算出する

## {base}による方法
はじめに、`R`の{base}にもとづいた、新規変数の作成方法について見ていこう。  
データフレーム内の変数（ベクトル）にアクセスする場合は`$`演算子を使うことはすでに学んだ通りである。新規変数を作成する場合もこの`$`演算子の後に新しい変数名を入力し、`<-`で変数の中身を代入すれば良い。

```{r}
DF_sample$height_m  <- DF_sample$height * 0.0254   ## m = inch * 0.0254
DF_sample$weight_kg <- DF_sample$weight * 0.45359237  ## kg = pound * 0.45359237
DF_sample
```
mで測定された身長`height_m`と、kgで測定された体重`weight_kg`とがそれぞれデータフレームに追加されたことがわかる。最後に、これらの変数を元にBMIを計算してみよう。

```{r}
DF_sample$BMI <- DF_sample$weight_kg / (DF_sample$height_m)^2 
DF_sample
```

データフレームの最後の列に`BMI`が追加された。以上が{base}による新規変数の作成方法である。その方法自体はそこまで複雑ではないものの、問題はコードの中でデータフレームの名前（この例では`DF_sample`）を何度も指定しなければならない点である。これがコードの可読性を低めてしまっている原因のひとつであるが、{tidyverse}を使えばこの問題が解消される。

## {tidyverse}による方法

はじめに、{tidyverse}は使用する前にライブラリの呼び出しを行う必要がある。さらに、初回のみパッケージのインストールも行う必要がある。パッケージのインストールは`install.packages()`を用いる。

```{r}
# install.packages("tidyverse")  # 初回のみでよい
library(tidyverse)
```

{tidyverse}には複数のパッケージが組み込まれており、データ前処理で主に活躍するのが`dplyr`パッケージである。以下で紹介する`dplyr`の関数は、データフレームあるいは`tibble`に適用できる。`tibble`とは一言で言えば、「`dplyr`用に改良されたデータフレーム」である。データフレームは`as_tibble()`関数で`tibble`に変換できる。

```{r}
DF_raw <- as_tibble(women)
DF_raw
```

`tibble`は最初に行数と列数が表示され、データ行列の大きさが分かるようになっている。また、変数名の下に<dbl>と表示されているが、これはその変数のデータの型を表している。`dbl`は数値型であり、この他にも因子型（`fct`）や文字列型（`chr`）などがある。`tibble`はデータフレームと比較して、データの型により厳密であることが特徴のひとつである。詳細は[`tibble`のヘルプページ](https://tibble.tidyverse.org/articles/types.html)を参照されたい。


`dplyr`による変数の追加には`mutate`関数を用いる。
```{r}
DF_sample <- 
  DF_raw |>
  mutate(height_m  = height * 0.0254,
         weight_kg = weight * 0.45359237,
         BMI       = weight_kg / height_m^2)

DF_sample
```

{base}による方法と比較すると、`mutate`を用いる方法の方が新規変数がどのように定義されたのかがわかりやすい。そのひとつの理由は、{base}による方法と異なり、変数名を指定する際にデータフレーム（ここでは`tibble`)の名前を何度も記述しなくてよいためである。
